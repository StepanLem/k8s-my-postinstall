# helm show values vault --repo https://helm.releases.hashicorp.com > vault-fullvalues.yaml

# server:
#   enabled: true
#   ha:
#     enabled: false
#   dataStorage:
#     enabled: true
#     size: 1Gi
#   ingress:
#     enabled: true
#     ingressClassName: nginx
#     hosts:
#       - host: vault.veryred.ru
#         paths:
#           - /

global:
  tlsDisable: false

server:
  enabled: true

  ha:
    enabled: false

  standalone:
    enabled: true

  # так как мы отключили tls:
  # надо слать http проверки, вместо https
  readinessProbe:
    scheme: HTTP
    enabled: true
    path: /v1/sys/health?standbyok=true
    port: 8200
    failureThreshold: 2
    initialDelaySeconds: 5
    periodSeconds: 5
    successThreshold: 1
    timeoutSeconds: 3

  # Привязка к конкретной ноде (node3)
  nodeSelector:
    kubernetes.io/hostname: node3
    # config: |-
    #   ui = true

    #   listener "tcp" {
    #     address           = "0.0.0.0:8200"
    #     tls_cert_file     = "/vault/tls/tls.crt"
    #     tls_key_file      = "/vault/tls/tls.key"
    #     tls_client_ca_file = "/vault/tls/ca.crt"
    #   }

    #   storage "raft" {
    #     path    = "/vault/data"
    #     node_id = "vault-0"
    #   }

    # По дефолту было:
    # storage "file" {
    #     path = "/vault/data"
    #   }

  # Тут всё дефолтные значения, кроме storageClass
  dataStorage:
    enabled: true
    # Size of the PVC created
    size: 10Gi
    # Location where the PVC will be mounted.
    mountPath: "/vault/data"
    # Name of the storage class to use.  If null it will use the
    # configured default Storage Class.
    storageClass: local-path-delete
    # Access Mode of the storage device being used for the PVC
    accessMode: ReadWriteOnce
    # Annotations to apply to the PVC
    annotations: {}
    # Labels to apply to the PVC
    labels: {}

  ingress:
    enabled: true
    ingressClassName: nginx
    annotations:
    #   nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    #   nginx.ingress.kubernetes.io/ssl-passthrough: "true"  # ← TLS passthrough!
      # /cluster-issuer(или /issuer, если и тут поменять) должен быть создан заранее для проекта или для кластера соосвественно
      cert-manager.io/cluster-issuer: "letsencrypt-prod"
    hosts:
      - host: vault.veryred.ru
    tls:
      - secretName: vault-tls-secret
        hosts:
          - vault.veryred.ru

  # # Монтирование сертификатов в pod
  # volumes:
  #   - name: vault-tls
  #     secret:
  #       secretName: vault-tls-secret
  #       items:
  #         - key: tls.crt
  #           path: tls.crt
  #         - key: tls.key
  #           path: tls.key
  #         - key: ca.crt
  #           path: ca.crt

  # volumeMounts:
  #   - name: vault-tls
  #     mountPath: /vault/tls
  #     readOnly: true

  # standalone:
  #   enabled: true
  #   config: |-
  #     ui = true

  #     listener "tcp" {
  #       address = "[::]:8200"
  #       tls_cert_file = "/vault/tls/tls.crt"
  #       tls_key_file = "/vault/tls/tls.key"
  #       tls_client_ca_file = "/vault/tls/ca.crt"
  #     }

  #     storage "file" {
  #       path = "/vault/data"
  #     }
      
ui:
  enabled: true

# injector:
#   enabled: false